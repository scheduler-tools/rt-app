# vim: syntax=spec

Name:       {{{ git_dir_name }}}

Version:    1.0

Release:    1%{?dist}

Summary:    rt-app: simulate system load.

License:    GPLv2

URL:        http://github.com/scheduler-tools/rt-app

VCS:        {{{ git_dir_vcs }}}

# git_dir_pack macro places the repository content (the source files) into a tarball
# and returns its filename. The tarball will be used to build the rpm.
Source:     {{{ git_dir_pack }}}

Buildrequires: autoconf
Buildrequires: automake
Buildrequires: libtool
Buildrequires: json-c-devel

Requires: json-c

# More detailed description of the package
%description
rt-app is a test application that starts multiple periodic threads in order to simulate a real-time periodic load.

# Python permits the !/usr/bin/python shebang for scripts that are cross
# compatible between python2 and python3, but Fedora 28 does not.  Fedora
# wants us to choose python3 for cross-compatible scripts.  Since we want
# to support python2 and python3 users, exclude our scripts from Fedora 28's
# RPM build check, so that we don't get a bunch of build warnings.
#
# Taken from: https://github.com/zfsonlinux/zfs/issues/7360
#
%global __brp_mangle_shebangs_exclude_from workgen

# The following four sections already describe the rpm build process itself.
# prep will extract the tarball defined as Source above and descend into it.
%prep
{{{ git_dir_setup_macro }}}

# This will invoke `make` command in the directory with the extracted sources.
%build
autoreconf --install --symlink || exit 1
./configure --with-deadline
make

# This will copy the files generated by the `make` command above into
# the installable rpm package.
%install
make install DESTDIR=%{buildroot}

# This lists all the files that are included in the rpm package and that
# are going to be installed into target system where the rpm is installed.
%files
/usr/local/bin/rt-app
/usr/local/bin/workgen

# Finally, changes from the latest release of your application are generated from
# your project's Git history. It will be empty until you make first annotated Git tag.
%changelog
{{{ git_dir_changelog }}}
